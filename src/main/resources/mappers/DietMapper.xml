<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.tantanbody.mapper.DietMapper">

    <!--java.util.HashMap-->
    <!--dietDTO-->
    <select id="selectDiets" resultType="java.util.HashMap">
        SELECT
            fr.EAT_DATM,
            fi.food_name,
            fr.EAT_COUNT,
            fr.TOTAL_KCAL
        FROM
            food_record fr,
            user_info ui,
            food_info fi
        WHERE
            ui.USER_EMAIL = fr.USER_EMAIL
          AND fr.FOOD_NUM = fi.food_num
          AND fr.USER_EMAIL = #{userEmail}
    </select>

    <!--TODO 수정이 필요할수도-->
    <select id="getRecentFoods" resultType="java.util.HashMap">
        select
               fi.food_name,
               fi.one_time_provision,
               fi.content_unit,
               fi.total_kcal
        from
             SEARCH_HISTORY sh,
             food_info fi,
             user_info ui
        where
            sh.FOOD_NUM = fi.food_num
            and sh.USER_EMAIL COLLATE utf8mb4_general_ci = ui.USER_EMAIL
            and sh.USER_EMAIL COLLATE utf8mb4_general_ci = #{userEmail}
        limit 5
    </select>

    <select id="selectFoodList" resultType="java.util.HashMap">
    <!--TODO 검색 결과가 없다면 어떻게 처리할 것인지?-->
        SELECT
               food_name,
               one_time_provision,
               content_unit,
               total_kcal
        FROM food_info
        WHERE
            food_name LIKE CONCAT('%', #{sFoodName}, '%')
    </select>

    <!--TODO 으아아아아-->
    <insert id="insertSearchFood" parameterType="dietDTO">
        INSERT
        INTO
            search_history
        VALUES
            (
             (SELECT USER_EMAIL FROM user_info WHERE USER_EMAIL = #{userEmail}),
             (SELECT FOOD_NUM FROM food_info WHERE FOOD_NUM = #{sFoodName}),
             now()
            )
    </insert>

    <insert id="insertDiet" parameterType="dietDTO">
        INSERT
        INTO
            food_record(FOOD_NUM,
                        USER_EMAIL,
                        EAT_DATM,
                        EAT_COUNT,
                        TOTAL_KCAL)
        VALUES
               ((SELECT FOOD_NUM FROM food_info WHERE FOOD_NUM = #{foodNum}),
                (SELECT USER_EMAIL FROM user_info WHERE USER_EMAIL = #{userEmail}),
                now(),
                #{eatCount},
                #{totalKcal})
    </insert>

</mapper>